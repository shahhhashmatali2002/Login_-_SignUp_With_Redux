{"version":3,"sources":["Components/Login/LoginFile.js","Components/SignUp/signup.js","Services/action/action.js","RoutesFile.js","App.js","reportWebVitals.js","Services/reducer/reducer.js","Store/store.js","index.js"],"names":["LoginFile","useState","showPassword","setShowPassword","email","password","values","setValues","handleChange","event","target","name","value","history","useHistory","loginn","useSelector","state","list","className","noValidate","autoComplete","TextField","id","label","onChange","type","FormControl","InputLabel","htmlFor","Input","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","preventDefault","Button","color","push","variant","style","marginLeft","console","log","length","alert","find","el","data","eMail","pswrd","prevValue","Signup","dispatch","useDispatch","chckbx","setChckBox","firstName","lastname","cnfrmPswrd","e","FormGroup","FormControlLabel","control","Checkbox","checked","payload","Date","getTime","toString","RoutesFile","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","mainReducer","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6faa5f2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\n// import useStyles from \"../../Globally/useStyle\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst LoginFile = () => {\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n    \r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target\r\n        setValues({ ...values, [name]: value });\r\n    };\r\n    \r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword)\r\n    };\r\n    \r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n    \r\n    const history = useHistory();\r\n    const signUpevent = () => {\r\n        history.push('/SignUp')\r\n        \r\n    }\r\n    \r\n    const loginn = useSelector((state) => state.list)\r\n\r\n    const signInn = () => {\r\n        console.log(\"Loginnnnnn\", loginn);\r\n\r\n        if (loginn && loginn.length > 0) {\r\n            if (values.email === '' || values.password === '')\r\n                alert(\"Please Enter Credintials\")\r\n            else if (values.email && values.password) {\r\n                let verify = loginn.find(el => el.data.eMail === values.email && el.data.pswrd === values.password);\r\n                if (verify){ \r\n                    alert('Verified') \r\n                    setValues((prevValue) =>({\r\n                    ...prevValue,\r\n                    email: '',\r\n                    password:''\r\n                }));\r\n            }\r\n                else alert('Invalid') \r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='main-div text-center'>\r\n                <div className='login'>\r\n                    <div className=''>\r\n                        <h1 className='mt-4'>User Login</h1>\r\n                        <div className='row justify-content-center'>\r\n                            <div className=\"col-8\">\r\n                                <form noValidate autoComplete=\"off\" className='mt-4'>\r\n                                    <TextField id=\"standard-basic\" label=\"Email\" className='w-100' onChange={handleChange} name=\"email\" type={'email'} value={values.email} />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-8\">\r\n                                <FormControl \r\n                                    // className={useStyles.margin, useStyles.textField} \r\n                                    className='mt-5'>\r\n                                    <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n                                    <Input\r\n                                        id=\"standard-adornment-password\"\r\n                                        type={showPassword ? 'text' : 'password'}\r\n                                        value={values.password}\r\n                                        name='password'\r\n                                        onChange={handleChange}\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword}\r\n                                                    onMouseDown={handleMouseDownPassword}\r\n                                                >\r\n                                                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col'>\r\n                                <Button color=\"secondary\" className='mt-5 text-left' onClick={signUpevent}>Create an account</Button>\r\n                            </div>\r\n                            <div className='col'>\r\n                                <Button className='mt-5 text-right' variant=\"contained\" color=\"primary\" style={{ marginLeft: '65px' }}\r\n                                onClick={signInn}>\r\n                                    Sign in\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default LoginFile;","import { Button, Checkbox, FormControl, FormControlLabel, FormGroup, IconButton, Input, InputAdornment, InputLabel, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { signUP } from \"../../Services/action/action\";\r\n\r\nconst Signup = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const [chckbx, setChckBox] = useState(false)\r\n\r\n    const [values, setValues] = useState({\r\n        firstName: '',\r\n        lastname: '',\r\n        eMail: '',\r\n        pswrd: '',\r\n        cnfrmPswrd: ''\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        setValues((prevValue) => ({\r\n            ...prevValue,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    const checkBoxEvent = (e) => {\r\n        debugger\r\n        if (e.target.checked) {\r\n            setChckBox(true)\r\n        } else {\r\n            setChckBox(false)\r\n        }\r\n    }\r\n    const loginn = useSelector((state) => state.list)\r\n\r\n    const signUp = () => {\r\n        let verify = loginn.find(el => el.data.eMail === values.eMail);\r\n        if(verify){\r\n            alert(\"This Email Already Exist\")\r\n        }else if (values.firstName === '' || values.lastname === '' || values.eMail === '' || values.pswrd === '' || values.cnfrmPswrd === '') {\r\n            alert(\"Please Fill all Fields\")\r\n        } else if (values.pswrd !== values.cnfrmPswrd) {\r\n            alert(\"Password Doesn't match\")\r\n        } else {\r\n            alert(\"Successfully Created Account\")\r\n            dispatch(signUP(values))\r\n            setValues({\r\n                firstName: '',\r\n                lastname: '',\r\n                eMail: '',\r\n                pswrd: '',\r\n                cnfrmPswrd: ''\r\n            })\r\n            history.push('/')\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className='main-div text-center'>\r\n                <div className='signUp'>\r\n                    <div className=''>\r\n                        <h1 className='mt-4'>Create Account</h1>\r\n                        <div className='row px-4'>\r\n                            <div className=\"col-6\">\r\n                                <form noValidate autoComplete=\"off\" className='mt-5'>\r\n                                    <TextField id=\"standard-basic\" label=\"First Name\" type={'text'} onChange={handleChange} value={values.firstName} name=\"firstName\" />\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <form noValidate autoComplete=\"off\" className='mt-5'>\r\n                                    <TextField id=\"standard-basic\" label=\"Last Name\" type={'text'} onChange={handleChange} value={values.lastname} name=\"lastname\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='row px-4'>\r\n                            <div className=\"col-12 px-4\">\r\n                                <form noValidate autoComplete=\"off\" className='mt-5'>\r\n                                    <TextField className=\"w-100\" id=\"standard-basic\" label=\"Email\" type={'email'} onChange={handleChange} value={values.eMail} name=\"eMail\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='row px-4'>\r\n                            <div className=\"col-6\">\r\n                                <form noValidate autoComplete=\"off\" className='mt-5'>\r\n                                    <TextField id=\"standard-basic\" label=\"Password\" type={chckbx ? 'text' : 'password'} onChange={handleChange} value={values.pswrd} name=\"pswrd\" />\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <form noValidate autoComplete=\"off\" className='mt-5'>\r\n                                    <TextField id=\"standard-basic\" label=\"Confirm Password\" type={chckbx ? 'text' : 'password'} onChange={handleChange} value={values.cnfrmPswrd} name=\"cnfrmPswrd\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row px-4 mt-2\">\r\n                            <div className=\"col-12\">\r\n                                <FormGroup className='px-2'>\r\n                                    <FormControlLabel control={<Checkbox value={\"1\"} onClick={checkBoxEvent} />} label=\"Show Password\" />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col'>\r\n                                <Button color=\"secondary\" className='mt-4'\r\n                                    onClick={() => history.push('/')}\r\n                                >Sign in Instead</Button>\r\n                            </div>\r\n                            <div className='col'>\r\n                                <Button className='mt-4 w-50' variant=\"contained\" color=\"primary\" onClick={signUp}>\r\n                                    Sign Up\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Signup;\r\n","export const signUP = (data) => {\r\n    return {\r\n        type: 'Create_Account',\r\n        payload: {\r\n            id: new Date().getTime().toString(),\r\n            data: data\r\n        }\r\n        // payload: {\r\n        //     id: new Date().getTime().toString(),\r\n        //     firstName: data.firstName,\r\n        //     lastName: data.lastName,\r\n        //     Email: data.Email,\r\n        //     Password: data.Password,\r\n        //     ConfrimPassword: data.ConfrimPassword\r\n        // }\r\n    }\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport LoginFile from \"./Components/Login/LoginFile\";\r\nimport Signup from \"./Components/SignUp/signup\";\r\nimport { Redirect } from \"react-router\";\r\nconst RoutesFile = () =>{\r\n    return(\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path={'/'} component={LoginFile}/>\r\n                <Route path={'/SignUp'} component={Signup} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n};\r\n\r\nexport default RoutesFile;","import './App.css';\r\nimport RoutesFile from './RoutesFile';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <RoutesFile/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n    list: []\r\n}\r\n\r\nconst mainReducer = (state = initialState,action) => {\r\n    switch (action.type) {\r\n        case \"Create_Account\":\r\n            const { id, data } = action.payload;\r\n            return {\r\n                ...state,\r\n                list: [\r\n                    ...state.list,\r\n                    {\r\n                        id: id,\r\n                        data: data\r\n                    }\r\n                ]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default mainReducer","import { createStore } from \"redux\";\r\n\r\nimport mainReducer from \"../Services/reducer/reducer\";\r\n\r\nconst store = createStore(mainReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from 'react-redux';\r\nimport store from './Store/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}